//responsive
@mixin respond-to($breakpoint){
    $raw-query: map-get($breakpoints, $breakpoint);
    @if $raw-query {
        $query: if(
            type-of($raw-query) == 'string',
            unquote($raw-query),
            inspect($raw-query)
        );

        @media #{$query} {
            @content;
        }
    } @else {
        @error 'No value found for `#{$breakpoint}`. '
            + 'Please make sure it is defined in `$breakpoints` map.';
    }
}

//font


//button
@each $sizeName, $h, $space, $fs, $fw in $btn-size{
    .btn.#{$sizeName} {
        height: rem($h);
        padding-left: rem($space);
        padding-right: rem($space);
        font-size: rem($fs);
        font-weight: $fw;
    }
}
@each $colorName, $bg, $line, $fc in $btn-color{
    .btn.#{$colorName} {
        background-color: $bg;
        border-color: $line;
        color: $fc;
    }
}

//접근성 감춤
@mixin a11y-hidden($focus-visible: false, $focus-state-class: 'focus') {
    overflow: hidden;
    position: absolute;
    clip: rect(0, 0, 0, 0);
    clip-path: circle(0);
    width: 1px;
    height: 1px;
    margin: -1px;
    border: 0;
    padding: 0;
    white-space: nowrap;

    @if $focus-visible {
        &#{'--' + $focus-state-class}:focus {
            overflow: visible;
            position: static;
            clip: auto;
            width: auto;
            height: auto;
            margin: 0;
            white-space: normal;
        }
    }
}

@mixin en-upper{
    text-transform: uppercase;
}